{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/Tile.js","Views/Home.js","Components/Figure.js","Views/Ppobo.js","Views/FPGANN.js","Views/Builds.js","Views/Miniprojects.js","Animations/Play.js","Animations/Animations.js","Components/Banner.js","App.js","index.js"],"names":["Header","className","this","props","title","text","prompt","React","Component","Footer","href","icon","faEnvelopeSquare","faGithubSquare","faLinkedin","faRedditSquare","faYoutubeSquare","Tile","to","link","style","backgroundImage","source","alt","Home","Figure","src","size","caption","Ppobo","FPGANN","Builds","MiniProjects","play","pathname","node","appears","timeline","delay","Timeline","paused","header","querySelectorAll","prompts","projects","from","autoAlpha","y","ease","Power1","easeInOut","x","easeIn","staggerFrom","easeOut","getHomeTimeline","promptsFigs","content","getProjectTimeline","window","loadPromise","then","requestAnimationFrame","document","body","scrollTop","documentElement","Banner","App","render","location","key","TransitionGroup","component","Transition","appear","onEnter","onExit","exit","timeout","enter","exact","path","PpoBO","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8304474a.chunk.js","sourcesContent":["import React from 'react'\nimport '../index.css'\nimport './Header.css'\n\nexport default class Header extends React.Component {\n  render () {\n    return (\n      <div className='header-component'>\n        <h1>\n          <em>{this.props.title} </em>\n          {this.props.text}\n          {this.props.prompt ? <i className='pulsate'>|</i> : null}\n        </h1>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport '../index.css'\nimport './Footer.css'\n\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faGithubSquare, faLinkedin, faRedditSquare, faYoutubeSquare } from '@fortawesome/free-brands-svg-icons'\n\nexport default class Footer extends React.Component {\n  render () {\n    return (\n      <div className='footer-component'>\n        <p className='prompt'>./print_contact_info</p>\n        <center>\n          <li><a title='Send me an Email' href='mailto:wang.poplar@gmail.com?subject=Hello'><FontAwesomeIcon icon={faEnvelopeSquare} /></a></li>\n          <li><a title='Check out my GitHub' href='https://github.com/Fsq-Poplar'><FontAwesomeIcon icon={faGithubSquare} /></a></li>\n          <li><a title='Connect with me on LinkedIn' href='https://www.linkedin.com/in/poplar-wang/'><FontAwesomeIcon icon={faLinkedin} /></a></li>\n          <li><a title='Stalk my Reddit' href='https://www.reddit.com/user/TrueElite/'><FontAwesomeIcon icon={faRedditSquare} /></a></li>\n          <li><a title='Listen to my music' href='https://ih0.redbubble.net/image.455809642.9971/poster,840x830,f8f8f8-pad,750x1000,f8f8f8.u2.jpg'><FontAwesomeIcon icon={faYoutubeSquare} /></a></li>\n        </center>\n        <p className='prompt'><i className='pulsate'>|</i></p>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\nimport './Tile.css'\n\nimport { Link } from 'react-router-dom'\n\nexport default class Tile extends React.Component {\n  render () {\n    return (\n      <article className='tile-component'>\n        <Link to={this.props.link}>\n          <div\n            className='post-background'\n            style={{ backgroundImage: 'url(' + this.props.source + ')' }}\n            alt={this.props.alt}\n          />\n        </Link>\n      </article>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nimport Header from '../Components/Header'\nimport Footer from '../Components/Footer'\nimport Tile from '../Components/Tile'\n\nexport default class Home extends React.Component {\n  render () {\n    return (\n      <div className='Home'>\n        <Header\n          title='Poplar Wang'\n          text='is a third year student at the University of Toronto, pursuing a double major in Computer Science and Economics.'\n          prompt\n        />\n        <p className='prompt'>./view_projects</p>\n        <Tile link='/ppobo' source='./Resources/ppobo.png' alt='dementia care app' />\n        <Tile link='/fpgann' source='./Resources/fpga_nn.png' alt='fpga neural network' />\n        <Tile link='/builds' source='./Resources/pc_builds.png' alt='my pc builds' />\n        <Tile link='/miniprojects' source='./Resources/mini_stuff.png' alt='smaller projects' />\n        <Footer />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nexport default class Figure extends React.Component {\n  render () {\n    return (\n      <figure className='figure-component'>\n        <center>\n          <img\n            src={this.props.source}\n            title={this.props.title}\n            alt={this.props.title}\n          />\n          <figcaption><font size='2'>{this.props.caption}</font></figcaption>\n        </center>\n      </figure>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nimport Header from '../Components/Header'\nimport Footer from '../Components/Footer'\nimport Figure from '../Components/Figure'\nimport { Link } from 'react-router-dom'\n\nexport default class Ppobo extends React.Component {\n  render () {\n    return (\n      <div className='Ppobo'>\n        <Header\n          title='PpoBO: '\n          text='Collaborative Care for Dementia and Alzheimers Patients'\n        />\n        <p className='prompt'><Link to='/'><i className='pulsate'>./home?</i></Link></p>\n        <p className='prompt'>echo '&lt; PpoBO_blog.txt'</p>\n\n        <p>A few years ago, a friend sent me several rather cryptic messages. Essentially, he had asked myself (and a few other friends in our neighborhood) to look out for his grandmother should she be seen walking around the community. At the time we didn't know, but this was because his grandmother was diagnosed with dementia, and at times would<a href='https://www.alz.org/help-support/caregiving/stages-behaviors/wandering'><em> wander outside of their home</em></a> with little to no idea where she was.\n          <br />This group of friends and I built an app at HackED 2020 to help those diagnosed with these conditions, focusing specifically on wandering and the dangers associated with it. We are proud to present PpoBO, which received the first place prize.\n        </p>\n        <Figure\n          source='./Resources/Projects/Ppobo/architecture.jpg'\n          title='App Architecture and Tech Stack'\n          caption=\"A view of the app's architecture and tech stack\"\n        />\n        <p>PpoBO works with two types of users, caretakers/\"care givers\" and \"care receivers\". Accounts are registered individually, and from there recievers are able to register caretakers; storage of all the app's data and secure authentication is done with Google's Firebase. After login, each type of user has different actions available to them from within the app.\n          <br />The UI/UX is entirely <a href='https://github.com/rqin1/PpoBO/tree/master/PpoBO/app/src/main/res'><em>native android</em></a>, so I won't spend much time on it. As our primary goal was to combat wandering, caretaker accounts are able to set up geofences for their care receivers, and receive a text message as well as a log/report in the app alerting them whenever the receiver leaves the geofence.\n        </p>\n        <Figure\n          source='./Resources/Projects/Ppobo/geofencing.jpg'\n          title='Caretaker View'\n          caption=\"Caretakers' geofence screen\"\n        />\n        <p>This was once again accomplished with Google, this time using Google Maps API. Geofences are <a href='https://developers.google.com/location-context/geofencing'><em>part of Maps</em></a>, and events can be set up to trigger on entering, leaving, or idling in these geofences. In our case, this was a text message and a basic report stored in the app. Unfortunately, the API currently only supports circular geofences with no easy workaround.\n          <br />But of course, our concern isn't if the caretaker leaves the geofence, but the care receiver. Thus, once a geofence is registered by a caretaker, it is immediately uploaded to the Firebase database and linked to the care receiver's app. This is currently not real time and requires an app restart; this is definitely something to fix when we resume development.\n        </p>\n        <Figure\n          source='./Resources/Projects/Ppobo/help.jpg'\n          title='Care receiver view'\n          caption='A very prominent button for care receivers'\n        />\n        <p>Asides from registering caretakers, care receivers don't need very much functionality from the app asides from location tracking. Thus, upon opening the app care receivers are greeted by a very large button simply labelled \"Help\"; this button sends a text message and alert to all caretakers much like exiting the geofence does, albeit with slightly different text.\n          <br />Upon pressing the button, care receivers are presented with a screen which lists shortcuts to related emergency numbers/services. The numbers are currently hard coded to <a href='https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/915/184/datas/gallery.jpg'><em>Alberta's relevant services</em></a>, but there are plans to allow these shortcuts to be customized. Some screens are shared by both types of users, such as viewing connected accounts, but these are simply just showing information and not very interesting from a development standpoint.\n        </p>\n        <Figure\n          source='./Resources/Projects/Ppobo/fluff.png'\n          title='Slack fluff'\n          caption='Hackathon Slack channels are always fun'\n        />\n        <p>Ultimately, this project was fairly straightforward. The only major challenge we faced (asides from lack of sleep) was working with the Kotlin code we used to implement geofencing, as none of us were familiar with Kotlin. Thankfully, Kotlin to Java translation is possible through Android Studio as they both run on the JVM and thus have the same machine code.\n          <br />The code can be found on <a href='https://github.com/rqin1/PpoBO'><em>GitHub here</em></a>. I'd like to thank my teammates: Darian, Richard, and Anmol, for working with me on this project and guiding me through my first major android project. I'd also like to thank HackED for organizing the hackathon; it was a pleasure to compete and present this project to everyone.\n        </p>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nimport Header from '../Components/Header'\nimport Footer from '../Components/Footer'\nimport Figure from '../Components/Figure'\nimport { Link } from 'react-router-dom'\n\nexport default class FPGANN extends React.Component {\n  render () {\n    return (\n      <div className='FPGANN'>\n        <Header\n          title='FPGA_NN: '\n          text='a Verilog 2005 Neural Network built on the Terasic DE1-SoC Board for Handwritten Number Recognition'\n        />\n        <p className='prompt'><Link to='/'><i className='pulsate'>./home?</i></Link></p>\n        <p className='prompt'>echo '&lt; fpga_nn_blog.txt'</p>\n\n        <p>So you want to build a hardware neural network.</p>\n        <p>This project was inspired by UofT's CSC258 Computer Organization course. I'm by no means an expert on the topic, and would highly recommend <a href='http://neuralnetworksanddeeplearning.com/chap1.html'><em>this book</em></a> to anyone looking to learn the basics of machine learning. Without going into the details, the plan seemed fairly simple from the start; each component and level of the network, be it a neuron or layer, as well as any mathematical operations not built into Verilog, would have a corresponding module written. The network's setup would be determined by a Python script and training would be done by loading the MNIST dataset. Having a sufficient understanding of the topic already, our first schematics were drawn up fairly quickly.</p>\n        <Figure\n          source='./Resources/Projects/FPGANN/proud_wentao.jpg'\n          title='Network Schematic'\n          caption='A proud Wentao stands in front of the first schematic iteration.'\n        />\n        <p>Of course, things didn't go as smoothly as expected.\n          <br />I should start off by saying the problems we ran into were rarely machine learning related; a simple neural network can reach 95% accuracy on the MNIST dataset with <a href='https://github.com/FSq-Poplar/FPGA_NN/blob/master/python_simulation/network.py'><em>a bit over 100 lines of code</em></a> in a high level language, and is relatively rudimentary. Rather, the majority of our problems arose from Verilog's limitations (especially when compared to its modern counterpart SystemVerilog), and the 5CSEMA5F31C6 chip we had available to us.\n          <br />Lets start off with the obvious - the board. While the DE1-SoC is a great board for teaching the basics of computer organization and FPGA development, it proved quite lacking for a project of this scale. The first problem we encountered was that the size of the chip did not allow for a network with back-propogation, much to our disappointment. We were forced to instead load weights and biases from the aforementioned Python script and implement only the feed-forward portion of the network on the actual FPGA.\n        </p>\n        <Figure\n          source='./Resources/Projects/FPGANN/de1soc.png'\n          title='DE1-SoC Board'\n          caption='The Terasic DE1-SoC board used by UofT'\n        />\n        <p>To make matters worse, the board was also quite lacking in memory; as the number of weights and biases grows exponentially with layers, these values had to be loaded onto the board's RAM instead of registers directly on the chip. While this isn't a major issue in terms of difficulty, it did complicate the design and timing of the network considerably, which cost a lot of development time.\n          <br />Board limitations were brought up as a possibility beforehand. Unfortunately, we were completely unprepared for the restrictions Verilog '05 would lay down. There were several small things here and there, my personal favourite being the <a href='https://stackoverflow.com/questions/40010554/how-do-i-initialize-a-2-dimensional-parameter-array-in-verilog-2005?rq=1'><em>lack of support for two-dimensional arrays</em></a>. It wasn't uncommon to write Python scripts to write repetitive Verilog code, which is as horrifying as it sounds.\n        </p>\n        <Figure\n          source='./Resources/Projects/FPGANN/beautiful_verilog.png'\n          title='Awful Verilog Code'\n          caption=\"There were ways to jury-rig Verilog, but it wasn't pretty.\"\n        />\n        <p>But the biggest issue was the lack of floats. In short, Verilog 2005's built-in real data type is completely unusable for this project, as they do not support the mathematical operations required. Integers were workable, asides from the fact that rounding that much would make the neural network beyond worthless (thanks to our use of the <a href='http://mathworld.wolfram.com/SigmoidFunction.html'><em>Sigmoid function</em></a>). This meant that we were forced to create a new number representation in Verilog, as well as all of its corresponding operations; everything from hadamard products to basic addition.\n          <br />Our final solution was to represent floats with 32-digit integers as \"binary\" instead, and write all the necessary operations from there. This was a very crude way to represent doubles in the language, but was the only solution that we were able to implement given our deadlines. While it works, its not very memory efficient and definitely a pain for humans to read.\n        </p>\n        <Figure\n          source='./Resources/Projects/FPGANN/modelsim_binary.png'\n          title='Awful ModelSim Testing'\n          caption='ModelSim testing was a nightmare of its own.'\n        />\n        <p>The UI of the project also presented a few minor problems, mostly resulting from the same language restrictions encountered in the other parts of the project, as well as some new ones (such as converting <a href='https://github.com/Nananas/ImageToMif'><em>png to mif</em></a>). The best example of \"Verilog should support this but doesn't\" was the lack of a modulo function, which made converting cursor position to a square on the 14x14 grid (on which users \"wrote\" their number) much more difficult than it should've been.\n          <br />I've been pretty hard on Verilog 2005, but in all fairness many of these so called restrictions make much more sense once placed in the context of a hardware description language, as opposed to a high level language like C or Python. While SystemVerilog would've made this project much simpler, at the end of the day many of these issues are just direct results of working with hardware.\n        </p>\n        <Figure\n          source='./Resources/Projects/FPGANN/unique_test.jpg'\n          title='Peculiar Test Case'\n          caption='A test done by an onlooker in Bahen (network predicted: 1)'\n        />\n        <p>With everything said, we were ultimately able to get the neural network up and running, albeit with a few compromises. I'd like to thank my partner, Wentao, for powering through countless all-nighters and teaching me the basics of machine learning. I'd also like to thank our professor, Rabia Bakhteri, for her guidance and support throughout the development period.\n          <br />The source code for the project can be found <a href='https://github.com/FSq-Poplar/FPGA_NN'><em>on my GitHub here</em></a>. Note some modules, such as the top level network module and conversion from MNIST to our 14x14 grid, have been omitted to prevent direct resubmission by future CSC258 students.\n        </p>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nimport Header from '../Components/Header'\nimport Footer from '../Components/Footer'\nimport Figure from '../Components/Figure'\nimport { Link } from 'react-router-dom'\n\nexport default class Builds extends React.Component {\n  render () {\n    return (\n      <div className='Builds'>\n        <Header\n          title='my_builds: '\n          text='The Hardware'\n        />\n        <p className='prompt'><Link to='/'><i className='pulsate'>./home?</i></Link></p>\n        <p className='prompt'>echo '&lt; my_builds_blog.txt'</p>\n\n        <p><em>Daily Driver Desktop </em><a href='https://ca.pcpartpicker.com/list/fLmXTC'>(PCPartPicker List)</a></p>\n        <Figure\n          source='./Resources/Projects/Builds/desktop.png'\n          title='Main Desktop'\n          caption='RAM was fixed to be dual-channel later.'\n        />\n        <p>CPU - Ryzen 7 3700x<br />AMD over Intel was a fairly obvious choice, given their current advantage over Intel in both price to performance and multi-threaded applications. I chose a Ryzen 7 over a Ryzen 5 as I find myself running multi-threaded workloads often enough to justify the upgrade, but not often enough to pay the extra for something like the Ryzen 9 3900x (which offers <a href='https://www.hardwaretimes.com/amd-ryzen-7-3700x-vs-ryzen-9-3900x-gaming-performance-across-10-titles-lows-clock-scaling-and-cpu-gpu-power-draw/'><em>no benefit in single threaded applications</em></a>). As for the 3800xt, the performance gains are marginal, especially when factoring in the roughly 25% increase in price.</p>\n        <p>Motherboard - MSI B450 Gaming Plus MAX<br />While B550 was available when I built this PC, I didn't see myself needing PCI Express Gen 4 for any practical reason anytime soon (little did I know the upcoming RTX 3000 video cards would make use of it). Additionally, with AMD's announcement that B450 boards would support 4th gen Ryzen, the newer chipset just seemed like a waste of money given the higher prices. I avoided X570 for a similar reason. As for why this specific MSI board, they're well respected in the price point (Gaming Plus Max and A-Pro Max), but I hated the color of the A-Pro. A Tomahawk would've been nice, but at the time was as expensive as an X570 board.</p>\n        <p>RAM - Corsair Vengeance LPX (2X8)GB DDR4-3200 CL16<br />I actually originally wanted to go for a kit of G.SKILL Ripjaws V, as the color scheme better fit my build. The kit I wanted ended up not being on my motherboard's QVL, and despite Ryzen's general compatibility with high frequency RAM, I didn't want to take the risk. Corsair's kits ended up being the best value available at the time. As for the clock speeds, 3200CL16 and 3600CL18 have <a href='https://forums.tomshardware.com/threads/3200-cl16-vs-3600-cl18-%E2%80%94-the-better-choice.3535789/'><em>practically identical latencies</em></a>, so the much cheaper 3200Mhz kit was far more appealing than a higher frequency kit which would offer <i>maybe</i> 1% actual performance gains.</p>\n        <p>Everything Else<br />I built this PC for both gaming and machine learning, so my GPU choice was whatever was best within my budget - this ended up being the Nvidia 2080 SUPER. While I wanted a Gigabyte Windforce for the quieter three fan heatsink, it wasn't in stock at the time and the EVGA Black was the next cheapest option with favorable reviews. Everything else is fairly standard, asides from the Asus PCE-AC56 wireless card which I added due to lack of CAT6 wiring in my apartment.</p>\n        <p><em>School/Travel Laptop</em></p>\n        <Figure\n          source='./Resources/Projects/Builds/laptop.png'\n          title='Spectre Laptop'\n          caption='Featuring two Thunderbolt 3 ports!'\n        />\n        <p>Obviously I can't bring my desktop to school every day, so I have a laptop - the HP Spectre X360. I wanted a smaller (13\") two in one, and ended up narrowing my choices between this, the Dell XPS13, and Microsoft Surface Laptop. Macs are dead to me until they fix their cooling. I hate the Alcantara Microsoft uses, but to be perfectly honest I chose the Spectre over the XPS13 simply because of its color scheme - oops.\n          <br />As for the model choice, I believe 4k displays on laptops to be overkill, especially when I already have a desktop and battery life is a big concern. For a similar reason, I opted for an i5-8250U and 8GB of RAM instead of the i7+16GB configurations, as heavier workloads could be done on my desktop.\n          <br />It is currently dual booting Windows 10 and Ubuntu 20.04, although I am considering Kali.\n        </p>\n        <p><em>Server </em><a href='https://ca.pcpartpicker.com/list/vnfKrV'>(Approximate List)</a></p>\n        <Figure\n          source='./Resources/Projects/Builds/server.png'\n          title='Frankenstein Server'\n          caption='A true mishmash of scavenged parts.'\n        />\n        <p>A test bench I use to deploy random things I wouldn't want on the computers shown above. It's built from scavenged/used parts, including an AMD APU released around a decade ago; dirt cheap, but functional. At the time of writing it's running Windows 10 for a Minecraft server (don't ask), as well as a VirtualBox Ubuntu VM for a Pihole DNS Sinkhole.\n          <br />Yes, that is a DDR3 SODIMM to DIMM converter. Yes, it works. No, I don't know how. <a href='https://www.amazon.ca/gp/product/B07GVGGGC7'><em>Here</em></a> is the link.\n        </p>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport '../index.css'\n\nimport Header from '../Components/Header'\nimport Footer from '../Components/Footer'\nimport Figure from '../Components/Figure'\nimport { Link } from 'react-router-dom'\n\nexport default class MiniProjects extends React.Component {\n  render () {\n    return (\n      <div className='Builds'>\n        <Header\n          title='mini_stuff: '\n          text='Quick Projects from a Bored CS Student'\n        />\n        <p className='prompt'><Link to='/'><i className='pulsate'>./home?</i></Link></p>\n        <p className='prompt'>echo '&lt; mini_stuff_blog.txt'</p>\n\n        <p><em>Storage Visualizer </em><a href='https://github.com/FSq-Poplar/storage_visualizer'>(GitHub Repo)</a></p>\n        <p>This was actually made from a school assignment in which we made a storage visualizer to practice working with trees. I needed to find ogg music files in a game folder, and ended up adding the file type colorization to the assignment to find their directory; later I rebuilt it from scratch and this tool took shape.</p>\n        <Figure\n          source='./Resources/Projects/MiniProjects/fs_visualizer.png'\n          title='File System Visualizer'\n          caption='A screenshot of the program'\n        />\n        <p>It creates a tree-like data structure containing all the relevant information to render, such as color, location, size etc - the \"FileSystemTree\" class. While definitely not the most efficient way to do it, as previously mentioned a large part of this assignment was to practice working with the data structure. To that end, I kept that design choice from the original assignment.</p>\n        <p><em>Binder Sleeper Laptop</em></p>\n        <p>An old netbook of mine had its case crack, to the point where it wasn't really portable anymore unless I wanted to break the thing in half. Fortunately, it was still functional as a computer and I ended up taking the thing out of its chassis.</p>\n        <Figure\n          source='./Resources/Projects/MiniProjects/deconstructed_laptop.jpg'\n          title='Sleeper under construction'\n          caption='The deconstructed netbook'\n        />\n        <p>I remembered seeing pentesting kits built into makeup kits, and had the idea to build the laptop into a binder I had lying around. After buying a bluetooth keyboard/trackpad, it only took a few hours to put together this sleeper laptop.</p>\n        <Figure\n          source='./Resources/Projects/MiniProjects/finished_sleeper.jpg'\n          title='Completed Sleeper'\n          caption='Finished'\n        />\n\n        <Footer />\n      </div>\n    )\n  }\n}\n","import { TimelineMax as Timeline, Power1 } from 'gsap'\nimport { getProjectTimeline, getHomeTimeline } from './Animations'\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5\n  let timeline\n\n  if (pathname === '/') { timeline = getHomeTimeline(node, delay) } else { timeline = getProjectTimeline(node, delay) }\n\n  window\n    .loadPromise\n    .then(() => window.requestAnimationFrame(() => timeline.play()))\n\n  document.body.scrollTop = 0\n  document.documentElement.scrollTop = 0\n}\n\nexport const exit = (node) => {\n  const timeline = new Timeline({ paused: true })\n\n  timeline.to(node, 0, { autoAlpha: 0, ease: Power1.easeOut })\n  timeline.play()\n}\n","import { TimelineMax as Timeline, Power1 } from 'gsap'\n\nexport const getProjectTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true })\n  const header = node.querySelectorAll('.header-component')\n  const promptsFigs = node.querySelectorAll('.prompt,li,.figure-component')\n  const content = node.querySelectorAll('p:not(.prompt)')\n\n  timeline\n    .from(header, 0.3, { autoAlpha: 0, y: -25, delay, ease: Power1.easeInOut })\n    .from(promptsFigs, 0.3, { autoAlpha: 0, x: -25, ease: Power1.easeIn })\n    .staggerFrom(content, 0.375, { autoAlpha: 0, delay: 0.30, ease: Power1.easeIn }, 0.125)\n\n  return timeline\n}\n\nexport const getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true })\n  const header = node.querySelectorAll('.header-component')\n  const prompts = node.querySelectorAll('.prompt,li')\n  const projects = node.querySelectorAll('.tile-component')\n\n  timeline\n    .from(header, 0.3, { autoAlpha: 0, y: -25, delay, ease: Power1.easeInOut })\n    .from(prompts, 0.3, { autoAlpha: 0, x: -25, ease: Power1.easeIn })\n    .staggerFrom(projects, 0.375, { autoAlpha: 0, delay: 0.30, ease: Power1.easeOut }, 0.125)\n\n  return timeline\n}\n\n/**\n * Not meant to be used in any way, just a reminder of what elements should be added and how\n */\nexport const getBasicTimeline = (node) => {\n  const timeline = new Timeline({ paused: true })\n  const header = node.querySelectorAll('.header-component')\n  const prompts = node.querySelectorAll('.prompt,li')\n\n  timeline\n    .from(header, 0.3, { autoAlpha: 0, y: -25, ease: Power1.easeInOut })\n    .from(prompts, 0.3, { autoAlpha: 0, x: -25, ease: Power1.easeIn })\n\n  return timeline\n}\n","import React from 'react'\nimport '../index.css'\nimport './Banner.css'\n\nexport default class Banner extends React.Component {\n  render () {\n    return (\n      <div className='banner-component'>\n        <img className='banner-img' src='./Resources/Banner.jpg' alt='Banner' />\n        <img className='banner-logo' src='./favicon.ico' alt='logo' />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Transition, TransitionGroup } from 'react-transition-group'\nimport './index.css'\nimport './App.css'\n\nimport Home from './Views/Home'\nimport PpoBO from './Views/Ppobo'\nimport FPGANN from './Views/FPGANN'\nimport Builds from './Views/Builds'\nimport MiniProjects from './Views/Miniprojects'\nimport { play, exit } from './Animations/Play'\nimport Banner from './Components/Banner'\n\nexport default class App extends React.Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Banner />\n          <Route render={({ location }) => {\n            const { pathname, key } = location\n            return (\n              <TransitionGroup component={null}>\n                <Transition\n                  key={key}\n                  appear\n                  onEnter={(node, appears) => play(pathname, node, appears)}\n                  onExit={(node, appears) => exit(node, appears)}\n                  timeout={{ enter: 750, exit: 150 }}\n                >\n                  <Switch location={location}>\n                    <Route exact path='/' component={Home} />\n                    <Route path='/ppobo' component={PpoBO} />\n                    <Route path='/fpgann' component={FPGANN} />\n                    <Route path='/builds' component={Builds} />\n                    <Route path='/miniprojects' component={MiniProjects} />\n                  </Switch>\n                </Transition>\n              </TransitionGroup>\n            )\n          }}\n          />\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}